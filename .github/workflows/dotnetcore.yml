# For details of what checks are run for PRs please refer below
name: .NET Core CI

on: [pull_request, workflow_dispatch]

jobs:
  # Fail if there are build warnings
  #
  # To check for build warnings locally you may need to run a clean build.
  #
  # This can be done by running `dotnet clean` before running `dotnet build`
  build-warnings:
    name: Build warnings check
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/setup-dotnet@v3.0.2
        with:
          dotnet-version: '6.0'

      - name: Build
        run: dotnet build /WarnAsError

  # We end up targeting a range of runtimes, make sure they all build
  build:
    name: Runtime build check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime: [linux-x64, linux-musl-x64, linux-arm, linux-arm64, win-x64, win-x86, win-arm, win-arm64, osx-x64, osx-arm64]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3.2.0
      - uses: actions/setup-dotnet@v3.0.2
        with:
          dotnet-version: '6.0'

      - name: Build
        run: dotnet build src/cyclonedx/cyclonedx.csproj -r ${{ matrix.runtime }}

  # Fail if there are any failed tests
  #
  # We support .NET 6.0 on Windows, Mac and Linux.
  #
  # To check for failing tests locally run `dotnet test`.
  test:
    name: Tests for .NET ${{ matrix.framework }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3.2.0
    - uses: actions/setup-dotnet@v3.0.2
      with:
        dotnet-version: '6.0'

    - name: Tests
      run: |
        dotnet restore
        dotnet test --framework net6.0
